{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst imageLoadedStyle = {\r\n    opacity: '1'\r\n};\r\n\r\nexport default class ImageFadeIn extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loaded: false\r\n        };\r\n\r\n        this.componentMounted = false;\r\n    }\r\n\r\n    onImageLoad = () => {\r\n        if (this.componentMounted) {\r\n            this.setState({ loaded: true });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const imgSrc = this.props.src;\r\n        if (imgSrc) {\r\n            //load image in a new window.Image and update local state when image is loaded\r\n            let img = new window.Image();\r\n            img.src = imgSrc;\r\n            img.onload = this.onImageLoad;\r\n            this.componentMounted = true;\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.componentMounted = false;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { src, loadAsBackgroundImage, opacityTransition, style, ...rest } = this.props;\r\n        //add transition style\r\n        let imageStyle = {\r\n            opacity: '0'\r\n        };\r\n\r\n        imageStyle.transition = `opacity ${opacityTransition}s ease 0s`;\r\n\r\n        return (<React.Fragment>\r\n            {!loadAsBackgroundImage && (<img\r\n                src={src}\r\n                {...rest}\r\n                style={this.state.loaded ? { ...style, ...imageStyle, ...imageLoadedStyle } : imageStyle} />)\r\n            }{loadAsBackgroundImage && (<div\r\n                {...rest}\r\n                style={this.state.loaded ? { backgroundImage: `url('${src}')`, ...style, ...imageStyle, ...imageLoadedStyle } : imageStyle}>\r\n                {this.props.children}\r\n            </div>)\r\n            }</React.Fragment>)\r\n    }\r\n}\r\n\r\nImageFadeIn.propTypes = {\r\n  /** image source url.   */\r\n  src: PropTypes.string.isRequired,\r\n  /** if false, renders as an IMG tag. If true, renders a DIV with image as the background-image (style css). */\r\n  loadAsBackgroundImage: PropTypes.bool,\r\n  /** Duration of the fade in, in seconds (s). */\r\n  opacityTransition: PropTypes.number,\r\n  /** OnClick handler. */\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nImageFadeIn.defaultProps = {\r\n    loadAsBackgroundImage: false,\r\n    opacityTransition: .5\r\n}"],"names":["imageLoadedStyle","ImageFadeIn","props","onImageLoad","componentMounted","setState","loaded","state","imgSrc","src","img","window","Image","onload","loadAsBackgroundImage","opacityTransition","style","rest","imageStyle","transition","backgroundImage","children","PureComponent","propTypes","PropTypes","string","isRequired","bool","number","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,mBAAmB;aACZ;CADb;;IAIqBC;;;yBAELC,KAAZ,EAAmB;;;6HACTA,KADS;;cASnBC,WATmB,GASL,YAAM;gBACZ,MAAKC,gBAAT,EAA2B;sBAClBC,QAAL,CAAc,EAAEC,QAAQ,IAAV,EAAd;;SAXW;;cAEVC,KAAL,GAAa;oBACD;SADZ;;cAIKH,gBAAL,GAAwB,KAAxB;;;;;;4CASgB;gBACVI,SAAS,KAAKN,KAAL,CAAWO,GAA1B;gBACID,MAAJ,EAAY;;oBAEJE,MAAM,IAAIC,OAAOC,KAAX,EAAV;oBACIH,GAAJ,GAAUD,MAAV;oBACIK,MAAJ,GAAa,KAAKV,WAAlB;qBACKC,gBAAL,GAAwB,IAAxB;;;;;+CAIe;iBACdA,gBAAL,GAAwB,KAAxB;;;;iCAGK;yBAEqE,KAAKF,KAF1E;gBAEGO,GAFH,UAEGA,GAFH;gBAEQK,qBAFR,UAEQA,qBAFR;gBAE+BC,iBAF/B,UAE+BA,iBAF/B;gBAEkDC,KAFlD,UAEkDA,KAFlD;gBAE4DC,IAF5D;;;gBAIDC,aAAa;yBACJ;aADb;;uBAIWC,UAAX,gBAAmCJ,iBAAnC;;mBAEQ;qBAAA,CAAO,QAAP;;iBACFD,qBAAD,IAA2B;yBACnBL;mBACDQ,IAFoB;2BAGjB,KAAKV,KAAL,CAAWD,MAAX,gBAAyBU,KAAzB,EAAmCE,UAAnC,EAAkDlB,gBAAlD,IAAuEkB,UAHtD,IADxB;yCAKwB;;iCACpBD,IADoB;+BAEjB,KAAKV,KAAL,CAAWD,MAAX,cAAsBc,4BAAyBX,GAAzB,QAAtB,IAA2DO,KAA3D,EAAqEE,UAArE,EAAoFlB,gBAApF,IAAyGkB,UAFxF;yBAGlBhB,KAAL,CAAWmB;;aARpB;;;;EA1CiCC;;;AAwDzCrB,YAAYsB,SAAZ,GAAwB;;SAEjBC,UAAUC,MAAV,CAAiBC,UAFA;;2BAICF,UAAUG,IAJX;;uBAMHH,UAAUI,MANP;;aAQbJ,UAAUK;CARrB;;AAWA5B,YAAY6B,YAAZ,GAA2B;2BACA,KADA;uBAEJ;CAFvB;;;;"}